pipeline {
  agent any
  environment {
      PGPASSWORD = 'canvas'
      RAILS_ENV = 'test'
  }
  stages {
    stage('BUILD') {
      steps {
//        git branch: 'maestria-stable', changelog: false, credentialsId: 'github-jorgevbo', poll: false, url: 'https://github.com/jorgevbo/canvas-lms'
//        sh 'bundle install'
        sh 'pwd'
      }
    }
    stage('TESTS') {
      steps {
//        sh 'for config in amazon_s3 database delayed_jobs domain file_store outgoing_mail security external_migration; do cp -v config/$config.yml.example config/$config.yml; done'
//        sh 'bundle exec rails db:test:reset'
        // sh 'bundle exec rspec spec/models/*.rb'
//        sh 'bundle exec rspec spec/models/users/*.rb'
          sh 'pwd'
      }
    }
    stage('PACKER') {
      steps {
        script {
          $TERRAFORM_VARS = input message: 'Terraform Vars a utilizar', parameters: [file(description: 'Archivo de variables terraform JSON', name: 'TERRAFORM_VARS')]
          echo $TERRAFORM_VARS

          $algo = readFile($TERRAFORM_VARS)
          writeFile file: 'terraform_vars.json', text: $algo
        }

          // new hudson.FilePath(new File("$workspace/packer/terraform_vars.json")).copyFrom($terraform_vars)

        input message: 'Packer Vars a utilizar', parameters: [file(description: 'packer_vars', name: 'packer_vars')]
        script {
          new hudson.FilePath(new File("$workspace/packer/packer_vars.json")).copyFrom($packer_vars)
        }
        
        sh 'cd packer'
        sh 'packer build -var-file=terraform_vars.json -var-file=packer_vars.json canvas-update.json'
      }
    }
  }
}