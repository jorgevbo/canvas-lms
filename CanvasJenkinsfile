pipeline {
  agent any
  environment {
      PGPASSWORD = 'canvas'
      RAILS_ENV = 'test'
  }
  stages {
    stage('BUILD') {
      steps {
//        git branch: 'maestria-stable', changelog: false, credentialsId: 'github-jorgevbo', poll: false, url: 'https://github.com/jorgevbo/canvas-lms'
//        sh 'bundle install'
        sh 'pwd'
      }
    }
    stage('TESTS') {
      steps {
//        sh 'for config in amazon_s3 database delayed_jobs domain file_store outgoing_mail security external_migration; do cp -v config/$config.yml.example config/$config.yml; done'
//        sh 'bundle exec rails db:test:reset'
        // sh 'bundle exec rspec spec/models/*.rb'
//        sh 'bundle exec rspec spec/models/users/*.rb'
          sh 'pwd'
      }
    }
    stage('PACKER') {
      steps {
        script {
          $terraform_vars = input message: 'Parametros de configuración para Infraestructura Terraform', parameters: [text(defaultValue: '', description: '', name: 'terraform_vars')]
          writeFile file: 'packer/terraform_vars.json', text: $terraform_vars
        }
        script {
          $packer_vars = input message: 'Parametros de configuración para AMI Packer', parameters: [text(defaultValue: '', description: '', name: 'packer_vars')]
          writeFile file: 'packer/packer_vars.json', text: $packer_vars
        }
        sh '''
          cd packer
          rm update-manifest.json
          packer build -var-file="terraform_vars.json" -var-file="packer_vars.json" canvas-update.json
          artifact_id=`jq ".builds[0].artifact_id" update-manifest.json`
          chars=${#artifact_id}
          artifact_id=${artifact_id:1:$(($chars-2))}
          IFS=':'
          read -ra PACKER <<< "$artifact_id"

          ami_string="variable \"packer_ami_id\" { default = \"${PACKER[1]}\" }"
          region_string="variable \"packer_region\" { default = \"${PACKER[0]}\" }"
          echo -e "$ami_string\n$region_string" > packer_variables.tf
        '''
      }
    }
  }
}